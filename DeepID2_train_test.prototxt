name: "DeepID2"

layer {
	name: "data"
	top: "data"
	top: "label"
	type: "Data"

	data_param {
		source: "examples/DeepID2_train_lmdb"
    	backend: LMDB
    	batch_size: 64
  	}

	transform_param {
		mean_file: "examples/DeepID2_mean.proto"
	}

	include {
		phase: TRAIN
	}
}

layer {
	name: "data"
	top: "data"
	top: "label"
	type: "Data"

	data_param {
		source: "examples/DeepID2_test_lmdb"
    	backend: LMDB
    	batch_size: 64
	}

	transform_param {
		mean_file: "examples/DeepID2_mean.proto"
	}

	include {
		phase: TEST
	}
}

layer {
	name: "conv1"
	type: "Convolution"
	bottom: "data"
	top: "conv1"

	param {
		name: "conv1_w"
		lr_mult: 1
		decay_mult: 0
	}

	param {
		name: "conv1_b"
		lr_mult: 2
		decay_mult: 0
	}

	convolution_param {
		num_output: 20
		kernel_size: 4
		stride: 1

		weight_filler {
			type: "xavier"
		}

		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "relu1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 0
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 40
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"

}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 0
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 0
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 80
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "fc160_1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc160_1"
  param {
    name: "fc160_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc160_1_b"
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "fc160_2"
  type: "InnerProduct"
  bottom: "conv4"
  top: "fc160_2"
  param {
    name: "fc160_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc160_2_b"
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "fc160"
  type: "Eltwise"
  bottom: "fc160_1"
  bottom: "fc160_2"
  top: "fc160"
  eltwise_param {
    operation: SUM
  }
}

layer {
  name: "dropout"
  type: "Dropout"
  bottom: "fc160"
  top: "fc160"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc_identity"
  type: "InnerProduct"
  bottom: "fc160"
  top: "fc_identity"
  param {
    name: "fc_identity_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc_identity_b"
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 10474
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "loss1"
  type: "SoftmaxWithLoss"
  bottom: "fc_identity"
  bottom: "label"
  top: "softmax_loss"
  loss_weight: 0.7
}

layer {
	name: "merege_pair"
	type: "Identity2Verify"
	bottom: "fc160"
	bottom: "label"
	top: "feature1"
	top: "feature2"
	top: "sim"
}

layer {
	name: "norm1"
	type: "Normalize"
	bottom: "feature1"
	top: "normfeature1"
}

layer {
	name: "norm2"
	type: "Normalize"
	bottom: "feature2"
	top: "normfeature2"
}

layer {
  name: "loss2"
  type: "ContrastiveLoss"
  bottom: "normfeature1"
  bottom: "normfeature2"
  bottom: "sim"
  top: "sim_loss"
  loss_weight: 0.3
  contrastive_loss_param {
    margin: 1
  }
}

layer {
  name: "accuracy1"
  type: "Accuracy"
  bottom: "fc_identity"
  bottom: "label"
  top: "accuracy1"
  include {
    phase: TEST
  }
}

